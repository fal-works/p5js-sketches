{"version":3,"file":"sketch.js","sources":["../src/common.ts","../src/settings.ts","../src/shape.ts","../src/epicenter.ts","../src/sketch.ts","../src/main.ts"],"sourcesContent":["/**\n * ---- Common ----------------------------------------------------------------\n */\n\nimport p5 from \"p5\";\nimport * as CCC from \"@fal-works/creative-coding-core\";\nimport * as p5ex from \"@fal-works/p5-extension\";\n\nexport const { Coordinates2D } = CCC;\n\nexport const {\n  onSetup,\n  onInstantiate,\n  translateRotate,\n  undoTranslateRotate,\n  Mouse,\n} = p5ex;\n\n/**\n * Shared p5 instance.\n */\nexport let p: p5;\n\nonInstantiate.push((p5Instance) => {\n  p = p5Instance;\n});\n\n/**\n * Shared canvas instance.\n */\nexport let canvas: p5ex.ScaledCanvas;\n\n/**\n * Alias for `p.drawingContext`.\n */\nexport let context: CanvasRenderingContext2D;\n\nonSetup.push(() => {\n  canvas = p5ex.canvas;\n  context = (p as any).drawingContext; // eslint-disable-line\n});\n\nexport const resetCommon = () => {};\n","/**\n * ---- Settings --------------------------------------------------------------\n */\n\n/** The id of the HTML element to which the canvas should belong. */\nexport const HTML_ELEMENT_ID = \"ShapesAndRipples\";\n\n/** The logical height of the canvas. */\nexport const LOGICAL_CANVAS_HEIGHT = 800;\n","/**\n * Shape.\n */\n\nimport {\n  p,\n  translateRotate,\n  undoTranslateRotate,\n  Coordinates2D,\n} from \"./common\";\nimport { onSetup } from \"@fal-works/p5-extension\";\nimport p5 from \"p5\";\n\nconst maxTemperature = 60;\nconst rotationVelocityDelayFactor = 0.95;\nconst shapeWidth = 6;\nconst shapeHeight = 36;\n\nexport interface Unit {\n  x: number;\n  y: number;\n  rotation: number;\n  rotationVelocity: number;\n  temperature: number;\n}\n\nexport const create = (x: number, y: number): Unit => ({\n  x,\n  y,\n  rotation: 0.0,\n  rotationVelocity: 0.0,\n  temperature: 0,\n});\n\nconst shapeColors: p5.Color[] = [];\nonSetup.push((p) => {\n  const black = p.color(32, 48, 64);\n  const blue = p.color(128, 192, 255);\n  for (let i = 0; i <= maxTemperature; i += 1) {\n    const ratio = i / maxTemperature;\n    shapeColors.push(p.lerpColor(black, blue, ratio));\n  }\n});\n\nexport const impact = (shape: Unit) => {\n  shape.rotationVelocity = 0.25;\n  shape.temperature = maxTemperature;\n};\n\nconst normalizeAngle = (angle: number): number =>\n  angle - p.PI * Math.floor((angle + p.HALF_PI) / p.PI);\n\nexport const update = (shape: Unit): void => {\n  let { rotation, rotationVelocity } = shape;\n\n  rotation += rotationVelocity;\n\n  const minVel = 0.02;\n  if (minVel <= rotationVelocity) {\n    rotationVelocity = Math.max(\n      rotationVelocityDelayFactor * rotationVelocity,\n      minVel\n    );\n    if (rotationVelocity == minVel) {\n      if (Math.abs(normalizeAngle(rotation)) < minVel) {\n        rotation = 0.0;\n        rotationVelocity = 0.0;\n      }\n    }\n  }\n\n  shape.rotation = rotation;\n  shape.rotationVelocity = rotationVelocity;\n\n  if (0 < shape.temperature) shape.temperature -= 1;\n};\n\nexport const draw = (shape: Unit): void => {\n  const { x, y, rotation, temperature } = shape;\n\n  translateRotate(x, y, rotation);\n  p.fill(shapeColors[temperature]);\n  p.rect(0.0, 0.0, shapeWidth, shapeHeight);\n  undoTranslateRotate();\n};\n\nconst collisionDistance = 1.5 * (shapeHeight / 2);\n\nexport const getDistSq = (shape: Unit, x: number, y: number): number =>\n  Coordinates2D.distanceSquared(shape.x, shape.y, x, y);\n\nexport const collides = (\n  shape: Unit,\n  x: number,\n  y: number,\n  colliderRadius: number\n) => {\n  const dist = collisionDistance + colliderRadius;\n  const distSq = dist * dist;\n\n  return getDistSq(shape, x, y) < distSq;\n};\n","/**\n * Epicenter.\n */\n\nimport { canvas } from \"./common\";\n\nexport interface Unit {\n  x: number;\n  y: number;\n  radius: number;\n}\n\nexport const create = (x: number, y: number): Unit => ({\n  x,\n  y,\n  radius: 0.0,\n});\n\nexport const radiusChangeRate = 12;\n\nexport const update = (unit: Unit): boolean => {\n  unit.radius += radiusChangeRate;\n\n  const canvasSize = canvas.logicalSize;\n  const dead = Math.max(canvasSize.width, canvasSize.height) < unit.radius;\n\n  return !dead;\n};\n","/**\n * ---- Sketch ----------------------------------------------------------------\n */\n\nimport p5 from \"p5\";\nimport { storePixels, pauseOrResume } from \"@fal-works/p5-extension\";\nimport { p, canvas, resetCommon, context, Mouse } from \"./common\";\nimport * as Shape from \"./shape\";\nimport * as Epicenter from \"./epicenter\";\n\n// ---- variables | functions ----\nlet drawBackground: () => void;\nconst shapes: Shape.Unit[] = [];\nlet cursorColor: p5.Color;\nlet epicenters: Epicenter.Unit[] = [];\n\n// ---- reset & initialize ----\nconst createBackground = () => {\n  p.background(252);\n  return storePixels();\n};\n\nconst resetShapes = () => {\n  shapes.length = 0;\n\n  const { width, height } = canvas.logicalSize;\n\n  const xInterval = 64;\n  const yInterval = 80;\n  const columns = Math.floor(width / xInterval) - 1;\n  const rows = Math.floor(height / yInterval) - 1;\n\n  for (\n    let i = 0, x = width / 2 - ((columns - 1) / 2) * xInterval;\n    i < columns;\n    i += 1, x += xInterval\n  ) {\n    for (\n      let k = 0, y = height / 2 - ((rows - 1) / 2) * yInterval;\n      k < rows;\n      k += 1, y += yInterval\n    ) {\n      shapes.push(Shape.create(x, y));\n    }\n  }\n};\n\nexport const reset = () => {\n  drawBackground = createBackground();\n\n  resetCommon();\n\n  resetShapes();\n  epicenters.length = 0;\n};\n\nexport const initialize = (): void => {\n  reset();\n  p.noStroke();\n  p.rectMode(p.CENTER);\n\n  cursorColor = p.color(0, 32, 64, 64);\n\n  const { scaleFactor } = canvas;\n  context.shadowOffsetX = scaleFactor * 16;\n  context.shadowOffsetY = scaleFactor * 16;\n  context.shadowBlur = scaleFactor * 6;\n  context.shadowColor = `rgba(0, 0, 0, 0.1)`;\n};\n\n// ---- draw ----\n\nconst cursorSize = 36.0;\nconst drawCursor = () => {\n  p.fill(cursorColor);\n  const t = 0.15 * p.frameCount;\n  p.ellipse(\n    0.0,\n    0.0,\n    cursorSize * (1.0 + 0.15 * Math.cos(t)),\n    cursorSize * (1.0 + 0.15 * Math.sin(t))\n  );\n};\n\nconst updateSketch = () => {\n  for (const shape of shapes) Shape.update(shape);\n  epicenters = epicenters.filter(Epicenter.update);\n\n  for (const shape of shapes) {\n    for (const epicenter of epicenters) {\n      const dist = Math.sqrt(Shape.getDistSq(shape, epicenter.x, epicenter.y));\n      const { radius } = epicenter;\n      const lastRadius = radius - Epicenter.radiusChangeRate;\n      if (lastRadius < dist && dist < radius) Shape.impact(shape);\n    }\n  }\n};\n\nconst drawSketch = () => {\n  for (const shape of shapes) Shape.draw(shape);\n\n  Mouse.drawAtCursor(drawCursor);\n};\n\nconst draw = (): void => {\n  updateSketch();\n\n  drawBackground();\n  canvas.drawScaled(drawSketch);\n};\n\n// ---- UI ----\n\nconst searchShape = () => {\n  Mouse.updatePosition();\n\n  const { x: mx, y: my } = Mouse.position;\n  for (const shape of shapes) {\n    if (Shape.collides(shape, mx, my, cursorSize / 2)) return shape;\n  }\n};\n\nconst mousePressed = () => {\n  Mouse.updatePosition();\n  const { x: mx, y: my } = Mouse.position;\n  epicenters.push(Epicenter.create(mx, my));\n};\n\nconst mouseMoved = () => {\n  Mouse.updatePosition();\n  const shape = searchShape();\n  if (shape) Shape.impact(shape);\n};\n\nconst keyTyped = () => {\n  switch (p.key) {\n    case \"p\":\n      pauseOrResume();\n      break;\n    case \"g\":\n      p.save(\"image.png\");\n      break;\n    case \"r\":\n      reset();\n      break;\n  }\n\n  return false;\n};\n\n// ---- p5 methods ----\n\nexport const p5Methods = {\n  draw,\n  keyTyped,\n  mousePressed,\n  mouseMoved,\n};\n","/**\n * ---- Main ------------------------------------------------------------------\n */\n\nimport { startSketch } from \"@fal-works/p5-extension\";\n\nimport { canvas } from \"./common\";\nimport { HTML_ELEMENT_ID, LOGICAL_CANVAS_HEIGHT } from \"./settings\";\nimport * as sketch from \"./sketch\";\n\n// ---- start sketch ----\n\nstartSketch({\n  htmlElement: HTML_ELEMENT_ID,\n  logicalCanvasHeight: LOGICAL_CANVAS_HEIGHT,\n  initialize: sketch.initialize, // delete?\n  windowResized: () => canvas.resizeIfNeeded(),\n  onCanvasResized: sketch.reset,\n  p5Methods: sketch.p5Methods,\n});\n"],"names":["CCC","p5ex","p5ex.canvas","onSetup","create","update","storePixels","Shape.create","Shape.update","Epicenter.update","Shape.getDistSq","Epicenter.radiusChangeRate","Shape.impact","Shape.draw","draw","Shape.collides","Epicenter.create","pauseOrResume","startSketch","sketch.initialize","sketch.reset","sketch.p5Methods"],"mappings":"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"}